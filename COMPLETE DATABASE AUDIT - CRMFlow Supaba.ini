 COMPLETE DATABASE AUDIT - CRMFlow Supabase
Jeg har gennemf√∏rt en omfattende audit af jeres Supabase database og schema. Her er mine fund opdelt i kategorier:
üö® KRITISKE SIKKERHEDSPROBLEMER (ERRORS)
1. Manglende RLS p√• 5 tabeller ‚ö†Ô∏è KRITISK
F√∏lgende tabeller har IKKE Row Level Security aktiveret, hvilket betyder at alle autentificerede brugere kan l√¶se/skrive alt:
‚úó pipelines - Ingen RLS
‚úó stages - Ingen RLS
‚úó deal_integrations - Ingen RLS
‚úó stage_probabilities - Ingen RLS
‚úó numbering_counters - Ingen RLS
Risiko: Alle autentificerede brugere kan √¶ndre pipeline-strukturen, stages, og dokumentnummerering.
Anbefaling: Aktiver RLS og tilf√∏j policies ASAP.
‚ö†Ô∏è ALVORLIGE SIKKERHEDSADVARSLER
2. Function Search Path Mutable (8 funktioner)
Alle jeres PL/pgSQL funktioner mangler SECURITY DEFINER eller explicit search_path setting, hvilket kan udnyttes til privilege escalation:
set_updated_at()
line_item_parent_exists()
next_doc_number()
update_tasks_updated_at()
create_task_activity()
compute_activity_status()
update_company_activity_status()
trg_update_company_activity()
Anbefaling: Tilf√∏j SET search_path = public, pg_temp til alle funktioner.
3. RLS Performance Problem (33 policies)
ALLE jeres RLS policies bruger auth.role() og auth.uid() direkte, hvilket betyder at Postgres re-evaluerer dem for hver r√¶kke. Dette giver suboptimal performance ved store datas√¶t.
Eksempel:

-- ‚ùå D√ÖRLIGT (nuv√¶rende)
CREATE POLICY "Allow authenticated users to manage deals" ON deals
  FOR ALL USING (auth.role() = 'authenticated');

-- ‚úÖ GODT (anbefalet)
CREATE POLICY "Allow authenticated users to manage deals" ON deals
  FOR ALL USING ((SELECT auth.role()) = 'authenticated');
  
P√•virkning: 33 tabeller p√•virket (deals, companies, people, quotes, orders, invoices, tasks, osv.)
4. Auth Konfiguration
‚ö†Ô∏è Leaked password protection er DEAKTIVERET (HaveIBeenPwned check)
‚ö†Ô∏è For f√• MFA muligheder aktiveret
üìä PERFORMANCE PROBLEMER
5. Manglende Indexes p√• Foreign Keys (9 stk)
F√∏lgende foreign keys mangler covering indexes, hvilket giver d√•rlig JOIN performance:
Tabel	Foreign Key	P√•virkning
deals	contact_id	Joins mellem deals og people
quotes	contact_id	Joins mellem quotes og people
orders	contact_id	Joins mellem orders og people
invoices	contact_id	Joins mellem invoices og people
task_activities	task_id	Task timeline queries
task_activities	user_id	User activity queries
task_comments	task_id	Task comments queries
task_comments	user_id	User comments queries
tasks	assigned_by	Assignment tracking
Anbefaling: Tilf√∏j indexes p√• disse kolonner.
6. Ubrugte Indexes (60+ indexes)
Mange indexes er aldrig blevet brugt siden oprettelse. Dette spiser disk space og g√∏r writes langsommere:
Eksempler:
idx_people_name (never used)
idx_people_updated_at (never used)
idx_deals_title (never used)
idx_companies_domain (never used)
Mange flere...
Anbefaling: Overvej at droppe ubrugte indexes efter at have verificeret query patterns i produktion.
üèóÔ∏è ARKITEKTUR & DATA INTEGRITET
7. Schema Inkonsistens mellem Filer
Der er forskelle mellem schema.sql, setup_database.sql og SETUP_NEW_PROJECT.sql:
Events tabel:
schema.sql: Bruger start_at, end_at, created_by (NOT NULL)
SETUP_NEW_PROJECT.sql: Bruger start_time, end_time, user_id (NOT NULL)
User Settings:
schema.sql: Har id som primary key + user_id unique
SETUP_NEW_PROJECT.sql: Har user_id som primary key direkte
Anbefaling: Standardiser p√• √âN autoritativ schema-fil.
8. Manglende Constraints
Selvom I har triggers, mangler nogle logiske constraints:
line_items: Ingen composite unique constraint p√• (parent_type, parent_id, position) - kan f√• duplikerede positions
events: Ingen check constraint for start_time < end_time
tasks: Ingen check constraint for completed_at kun sat n√•r status = 'completed'
idempotency_keys: Har expires_at men ingen automatisk cleanup (cron job eller trigger)
9. Manglende Cascading Deletes
Nogle relationer bruger SET NULL hvor CASCADE ville give mere mening:
deals.contact_id ‚Üí SET NULL (OK, men overvej om deal skal eksistere uden contact)
quotes/orders/invoices.contact_id ‚Üí SET NULL (OK)
documents.person_id ‚Üí SET NULL (OK)
Nuv√¶rende adf√¶rd er OK, men overvej om det matcher jeres business logic.
10. Polymorphic Relations uden Constraints
line_items bruger polymorphic pattern (parent_type + parent_id), men:
‚úÖ God: I har trigger line_item_parent_exists() til validering
‚ö†Ô∏è Problem: Ingen foreign key constraint betyder at Postgres ikke kan optimere joins
‚ö†Ô∏è Problem: Ingen index p√• parent_id alene (kun composite index)
üìã MANGLENDE FEATURES
11. Audit Trail
‚úÖ I har activities tabel for deals
‚úÖ I har task_activities for tasks
‚ùå Mangler audit trail for: companies, people, quotes, orders, invoices, payments
Anbefaling: Overvej en generisk audit_log tabel eller brug Supabase Audit Logs feature.
12. Soft Deletes
Ingen tabeller har soft delete (deleted_at). Alle deletes er permanente.
Anbefaling: Overvej soft deletes for kritiske data (deals, companies, quotes, orders, invoices).
13. Manglende Timestamps
pipelines mangler created_at, updated_at
stages mangler created_at, updated_at
numbering_counters mangler timestamps
activities har kun created_at (ingen updated_at)
14. Manglende Full-Text Search
Ingen tabeller har GIN indexes for full-text search p√• text kolonner.
Anbefaling: Tilf√∏j for:
companies.name, companies.domain
people.first_name, people.last_name, people.email
deals.title
üîß MIGRATIONS PROBLEMER
15. Migration Strategi
‚úÖ I har 9 migrations i supabase/migrations/
‚ö†Ô∏è I har ogs√• migrations i database/migrations/ (duplikering?)
‚ö†Ô∏è Ingen rollback scripts
Anbefaling: Konsolider til √âN migrations mappe.